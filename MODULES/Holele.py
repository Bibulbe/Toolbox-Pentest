import trio
import httpx

import importlib
import pkgutil
from tabulate import tabulate

out = []


def import_submodules(package, recursive=True):
    """Get all the holehe submodules"""
    if isinstance(package, str):
        package = importlib.import_module(package)
    results = {}
    for loader, name, is_pkg in pkgutil.walk_packages(package.__path__):
        full_name = package.__name__ + '.' + name
        results[full_name] = importlib.import_module(full_name)
        if recursive and is_pkg:
            results.update(import_submodules(full_name))
    return results


def get_functions(modules, args=None):
    """Transform the modules objects to functions"""
    websites = []

    for module in modules:
        if len(module.split(".")) > 3:
            modu = modules[module]
            site = module.split(".")[-1]
            if args is not None and args.nopasswordrecovery == True:
                if "adobe" not in str(modu.__dict__[site]) and "mail_ru" not in str(
                        modu.__dict__[site]) and "odnoklassniki" not in str(
                        modu.__dict__[site]) and "samsung" not in str(modu.__dict__[site]):
                    websites.append(modu.__dict__[site])
            else:
                websites.append(modu.__dict__[site])
    return websites


async def holele_main(email):
    client = httpx.AsyncClient(timeout=10)
    data = {'aboutme': 'about.me', 'adobe': 'adobe.com', 'amazon': 'amazon.com', 'anydo': 'any.do',
            'archive': 'archive.org', 'armurerieauxerre': 'armurerie-auxerre.com', 'atlassian': 'atlassian.com',
            'babeshows': 'babeshows.co.uk', 'badeggsonline': 'badeggsonline.com', 'biosmods': 'bios-mods.com',
            'biotechnologyforums': 'biotechnologyforums.com', 'bitmoji': 'bitmoji.com',
            'blablacar': 'blablacar.com', 'blackworldforum': 'blackworldforum.com', 'blip': 'blip.fm',
            'blitzortung': 'forum.blitzortung.org', 'bluegrassrivals': 'bluegrassrivals.com',
            'bodybuilding': 'bodybuilding.com', 'buymeacoffee': 'buymeacoffee.com',
            'cambridgemt': 'discussion.cambridge-mt.com', 'caringbridge': 'caringbridge.org',
            'chinaphonearena': 'chinaphonearena.com', 'clashfarmer': 'clashfarmer.com',
            'codecademy': 'codecademy.com', 'codeigniter': 'forum.codeigniter.com', 'codepen': 'codepen.io',
            'coroflot': 'coroflot.com', 'cpaelites': 'cpaelites.com', 'cpahero': 'cpahero.com',
            'cracked_to': 'cracked.to', 'crevado': 'crevado.com', 'deliveroo': 'deliveroo.com',
            'demonforums': 'demonforums.net', 'devrant': 'devrant.com', 'diigo': 'diigo.com',
            'discord': 'discord.com', 'docker': 'docker.com', 'dominosfr': 'dominos.fr', 'ebay': 'ebay.com',
            'ello': 'ello.co', 'envato': 'envato.com', 'eventbrite': 'eventbrite.com', 'evernote': 'evernote.com',
            'fanpop': 'fanpop.com', 'firefox': 'firefox.com', 'flickr': 'flickr.com',
            'freelancer': 'freelancer.com', 'freiberg': 'drachenhort.user.stunet.tu-freiberg.de',
            'garmin': 'garmin.com', 'github': 'github.com', 'google': 'google.com', 'gravatar': 'gravatar.com',
            'imgur': 'imgur.com', 'instagram': 'instagram.com', 'issuu': 'issuu.com', 'koditv': 'forum.kodi.tv',
            'komoot': 'komoot.com', 'laposte': 'laposte.fr', 'lastfm': 'last.fm', 'lastpass': 'lastpass.com',
            'mail_ru': 'mail.ru', 'mybb': 'community.mybb.com', 'myspace': 'myspace.com',
            'nattyornot': 'nattyornotforum.nattyornot.com', 'naturabuy': 'naturabuy.fr',
            'ndemiccreations': 'forum.ndemiccreations.com', 'nextpvr': 'forums.nextpvr.com', 'nike': 'nike.com',
            'odnoklassniki': 'ok.ru', 'office365': 'office365.com', 'onlinesequencer': 'onlinesequencer.net',
            'parler': 'parler.com', 'patreon': 'patreon.com', 'pinterest': 'pinterest.com', 'plurk': 'plurk.com',
            'pornhub': 'pornhub.com', 'protonmail': 'protonmail.ch', 'quora': 'quora.com', 'rambler': 'rambler.ru',
            'redtube': 'redtube.com', 'replit': 'replit.com', 'rocketreach': 'rocketreach.co',
            'samsung': 'samsung.com', 'seoclerks': 'seoclerks.com', 'sevencups': '7cups.com', 'smule': 'smule.com',
            'snapchat': 'snapchat.com', 'soundcloud': 'soundcloud.com', 'sporcle': 'sporcle.com',
            'spotify': 'spotify.com', 'strava': 'strava.com', 'taringa': 'taringa.net',
            'teamtreehouse': 'teamtreehouse.com', 'tellonym': 'tellonym.me', 'thecardboard': 'thecardboard.org',
            'therianguide': 'forums.therian-guide.com', 'thevapingforum': 'thevapingforum.com',
            'tumblr': 'tumblr.com', 'tunefind': 'tunefind.com', 'twitter': 'twitter.com', 'venmo': 'venmo.com',
            'vivino': 'vivino.com', 'voxmedia': 'voxmedia.com', 'vrbo': 'vrbo.com', 'vsco': 'vsco.co',
            'wattpad': 'wattpad.com', 'wordpress': 'wordpress.com', 'xing': 'xing.com', 'xnxx': 'xnxx.com',
            'xvideos': 'xvideos.com', 'yahoo': 'yahoo.com', 'hubspot': 'hubspot.com', 'pipedrive': 'pipedrive.com',
            'insightly': 'insightly.com', 'nutshell': 'nutshell.com', 'zoho': 'zoho.com', 'axonaut': 'axonaut.com',
            'amocrm': 'amocrm.com', 'nimble': 'nimble.com', 'nocrm': 'nocrm.io', 'teamleader': 'teamleader.eu'}

    modules = import_submodules("holehe.modules")
    websites = get_functions(modules)

    for website in websites:
        try:
            await website(email, client, out)
        except Exception:
            name = str(website).split('<function ')[1].split(' ')[0]
            out.append({"name": name, "domain": data[name],
                        "rateLimit": True,
                        "exists": False,
                        "emailrecovery": None,
                        "phoneNumber": None,
                        "others": None})

    # print(out)
    await client.aclose()


def run_holehe(email):
    trio.run(holele_main, email)

    foundlist = []

    for site in out:
        if site['exists']:
            founddict = {'nom': site['name'], 'Domain Name': site['domain'], 'Phone Number': site['phoneNumber'],
                         'Data': site['others']}
            foundlist.append(founddict)

    return foundlist


def affiche_holele():
    email = input('Enter the email address you want to analyze : ')

    print('holele started to run, it may take a few minutes : ...')

    returnlist = run_holehe(email)
    headerlist = {'nom': 'Website', 'nom1': 'Domain', 'nom3': 'Phone Number', 'nom4': 'Data'}
    if len(returnlist):
        print(f'{email} Has been found in :')
        print(tabulate(returnlist, headerlist))
    else:
        print('{email} Has not been found')
        input()
