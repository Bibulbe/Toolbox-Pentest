import pyfiglet
import sys

from datetime import datetime

from MODULES.pdfGeneral import nmap2table, nmap_dictionarisation, vulnnmap, simplify_vulnnmap, simplify_vulnnmap2, \
    markdown2pdf
from MODULES.ScanPort import Nmap_silent, NmapC, afficheNmap
from MODULES.ScanPort import Nmap_classic
from MODULES.sshSimpleBrutForce import sshSimpleBruteForce
from MODULES.sshSimpleBrutForce import ftpsSimpleBruteForce
from MODULES.sshSimpleBrutForce import ftpSimpleBruteForce
from MODULES.pdfGeneral import generate_markdown
from MODULES.searchsploitCli import exploitdbSearch


def scan_submenu():
    print(pyfiglet.figlet_format("Scanning Menu"))
    print("1-NMAP classic")
    print("2-NMAP silent")
    print("3-Back to main menu")
    print("4-Quit")
    choice = input("Choose an option : ")
    if choice == "1":
        target = str(input("Set target IP\n> "))
        resultat = NmapC(target)

        # generate_markdown(resultat)

        # print(afficheNmap(resultat))
        varvulnmap = vulnnmap(resultat)
        nmapWithVuln = simplify_vulnnmap2(varvulnmap)

        ip = ''

        for key, value in nmapWithVuln.items():
            if ip != key.split(':')[0]:
                ip = key.split(':')[0]
                hostname = (' '.join(key.split(':')[1:])).split(' - ')
                print('-' * 20)
                if len(hostname) > 1:
                    print(key.split(':')[0] + ' ' + ''.join(hostname[-1]))
                else:
                    print(key.split(':')[0])
                print('-' * 20)
                print('Port\tService\t\t\tVersion\t\tExploit')
            service = (''.join(' '.join(key.split(':')[1:]).split(' - ')[0::-2])).replace(' ', '\t\t', 1).replace(' ',
                                                                                                                  '\t',
                                                                                                                  -1)
            if not value:
                exploit = 0
            else:
                exploit = len(value)
            print('{service}\t\t{exploit}'.format(service=service, exploit=exploit))

        # for product, version in versions_all.items():
        #     if product is not None and version is not None:
        #         print("OK")
        #         exploit = exploitdbSearch(product + " " + version)
        #         if exploit:
        #
        #             print(MODULES.pdfGeneral.vulnnmap(exploit))
        #         else:
        #             print("No vulnerabilities found in Exploidb")
        #     else:
        #         print("Version or service not found")
        #         scan_submenu()
        export_submenu(resultat)


    elif choice == "2":
        target = str(input("Set target IP\n> "))
        resultat = Nmap_silent(target)
        scan_submenu()
    elif choice == "3":
        main_menu()
    elif choice == "4":
        sys.exit()
    else:
        print("Invalid option, please try again.")
        scan_submenu()


def export_submenu(nmap):
    print('[0] Return to Scan Menu [1] Export to pdf [2] Quit')
    choice = input("Choisissez une option : ")
    if choice == "0":
        scan_submenu()
    elif choice == "1":
        now = datetime.now()
        date_time_str = now.strftime("%d-%m-%Y %H:%M")
        exit = input("Put the path where you want to save the file (ex:/home/) : ")
        exit += "Exploit "+date_time_str+".pdf"
        markdown2pdf(generate_markdown(nmap), exit)
        scan_submenu()
    elif choice == "2":
        sys.exit()


def exploit_submenu():
    print(pyfiglet.figlet_format("Exploit Menu"))
    print("1-WIP")
    print("2-Brut Force")
    print("3-Retour au menu principal")
    print("4-Quit")
    choice = input("Choisissez une option : ")
    if choice == "1":
        print("Exploitation de la vulnérabilité 1 en cours...")
    elif choice == "2":
        brutforce_submenu()
    elif choice == "3":
        main_menu()
    elif choice == "4":
        sys.exit()
    else:
        print("Invalid option, please try again.")
        exploit_submenu()

def brutforce_submenu():
    print(pyfiglet.figlet_format("Brut Force Menu"))
    print("1-SSH")
    print("2-FTP")
    print("3-FTPS")
    print("4-Back to main menu")
    print("5-Quit")
    choice = input("Choose an option : ")
    if choice == "1":
        targetIP = str(input("Set target IP\n> "))
        sshSimpleBruteForce(targetIP,22)
        brutforce_submenu()
    elif choice == "2":
        targetIP = str(input("Set target IP\n> "))
        ftpSimpleBruteForce(targetIP,21)
        brutforce_submenu()
    elif choice == "3":
        targetIP = str(input("Set target IP\n> "))
        ftpsSimpleBruteForce(targetIP,21)
        brutforce_submenu()
    elif choice == "4":
        main_menu()
    elif choice == "5":
        sys.exit()
    else:
        print("Invalid option, please try again.")
        brutforce_submenu()

def main_menu():
    print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠟⠃⠀⠀⠙⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠋⠀⠀⠀⠀⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠾⢛⠒⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣶⣄⡈⠓⢄⠠⡀⠀⠀⠀⣄⣷⠀⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣷⠀⠈⠱⡄⠑⣌⠆⠀⠀⡜⢻⠀⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡿⠳⡆⠐⢿⣆⠈⢿⠀⠀⡇⠘⡆⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣷⡇⠀⠀⠈⢆⠈⠆⢸⠀⠀⢣⠀⠀⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣧⠀⠀⠈⢂⠀⡇⠀⠀⢨⠓⣄⠀⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣦⣤⠖⡏⡸⠀⣀⡴⠋⠀⠈⠢⡀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠁⣹⣿⣿⣿⣷⣾⠽⠖⠊⢹⣀⠄⠀⠀⠀⠈⢣⡀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⣇⣰⢫⢻⢉⠉⠀⣿⡆⠀⠀⡸⡏⠀⠀⠀⠀⠀⠀⢇\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡇⡇⠈⢸⢸⢸⠀⠀⡇⡇⠀⠀⠁⠻⡄⡠⠂⠀⠀⠀⠘\n"
          "⢤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠛⠓⡇⠀⠸⡆⢸⠀⢠⣿⠀⠀⠀⠀⣰⣿⣵⡆⠀⠀⠀⠀\n"
          "⠈⢻⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⣦⣀⡇⠀⢧⡇⠀⠀⢺⡟⠀⠀⠀⢰⠉⣰⠟⠊⣠⠂⠀⡸\n"
          "⠀⠀⢻⣿⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢧⡙⠺⠿⡇⠀⠘⠇⠀⠀⢸⣧⠀⠀⢠⠃⣾⣌⠉⠩⠭⠍⣉⡇\n"
          "⠀⠀⠀⠻⣿⣿⣿⣿⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣞⣋⠀⠈⠀⡳⣧⠀⠀⠀⠀⠀⢸⡏⠀⠀⡞⢰⠉⠉⠉⠉⠉⠓⢻⠃\n"
          "⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⢀⣀⠠⠤⣤⣤⠤⠞⠓⢠⠈⡆⠀⢣⣸⣾⠆⠀⠀⠀⠀⠀⢀⣀⡼⠁⡿⠈⣉⣉⣒⡒⠢⡼⠀\n"
          "⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣎⣽⣶⣤⡶⢋⣤⠃⣠⡦⢀⡼⢦⣾⡤⠚⣟⣁⣀⣀⣀⣀⠀⣀⣈⣀⣠⣾⣅⠀⠑⠂⠤⠌⣩⡇⠀\n"
          "⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⣺⢁⣞⣉⡴⠟⡀⠀⠀⠀⠁⠸⡅⠀⠈⢷⠈⠏⠙⠀⢹⡛⠀⢉⠀⠀⠀⣀⣀⣼⡇⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⡟⢡⠖⣡⡴⠂⣀⣀⣀⣰⣁⣀⣀⣸⠀⠀⠀⠀⠈⠁⠀⠀⠈⠀⣠⠜⠋⣠⠁⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⡟⢿⣿⣿⣷⡟⢋⣥⣖⣉⠀⠈⢁⡀⠤⠚⠿⣷⡦⢀⣠⣀⠢⣄⣀⡠⠔⠋⠁⠀⣼⠃⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⡄⠈⠻⣿⣿⢿⣛⣩⠤⠒⠉⠁⠀⠀⠀⠀⠀⠉⠒⢤⡀⠉⠁⠀⠀⠀⠀⠀⢀⡿⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣤⣤⠴⠟⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠤⠀⠀⠀⠀⠀⢩⠇⠀⠀⠀\n"
          "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n")
    print("(c) Copyright 2023, Jeannot & Mascarilla")
    print(pyfiglet.figlet_format("Pentest ToolBox"))
    print("1-Scanning")
    print("2-Exploit")
    print("5-Quit")
    choice = input("Choose an option : ")
    if choice == "1":
        scan_submenu()
    elif choice == "2":
        exploit_submenu()
    elif choice == "5":
        sys.exit()
    else:
        print("Invalid option, please try again.")
        main_menu()

main_menu()
